[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "anyio"
version = "4.11.0"
description = "High-level concurrency and networking framework on top of asyncio or Trio"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.31.0)"]

[[package]]
name = "beautifulsoup4"
version = "4.13.5"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
soupsieve = ">1.2"
typing-extensions = ">=4.0.0"

[package.extras]
cchardet = ["cchardet"]
chardet = ["chardet"]
charset-normalizer = ["charset-normalizer"]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "cachetools"
version = "5.5.2"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "certifi"
version = "2025.8.3"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "charset-normalizer"
version = "3.4.3"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "click"
version = "8.3.0"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coverage"
version = "7.10.7"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.9"

[package.extras]
toml = ["tomli"]

[[package]]
name = "dnspython"
version = "2.8.0"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.10"

[package.extras]
dev = ["black (>=25.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "hypercorn (>=0.17.0)", "mypy (>=1.17)", "pylint (>=3)", "pytest-cov (>=6.2.0)", "pytest (>=8.4)", "quart-trio (>=0.12.0)", "sphinx-rtd-theme (>=3.0.0)", "sphinx (>=8.2.0)", "twine (>=6.1.0)", "wheel (>=0.45.0)"]
dnssec = ["cryptography (>=45)"]
doh = ["h2 (>=4.2.0)", "httpcore (>=1.0.0)", "httpx (>=0.28.0)"]
doq = ["aioquic (>=1.2.0)"]
idna = ["idna (>=3.10)"]
trio = ["trio (>=0.30)"]
wmi = ["wmi (>=1.5.1)"]

[[package]]
name = "email-validator"
version = "2.3.0"
description = "A robust email address syntax and deliverability validation library."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dnspython = ">=2.0.0"
idna = ">=2.0.0"

[[package]]
name = "fastapi"
version = "0.111.1"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
email_validator = ">=2.0.0"
fastapi-cli = ">=0.0.2"
httpx = ">=0.23.0"
jinja2 = ">=2.11.2"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0"
python-multipart = ">=0.0.7"
starlette = ">=0.37.2,<0.38.0"
typing-extensions = ">=4.8.0"
uvicorn = {version = ">=0.12.0", extras = ["standard"]}

[package.extras]
all = ["httpx (>=0.23.0)", "jinja2 (>=2.11.2)", "python-multipart (>=0.0.7)", "itsdangerous (>=1.1.0)", "pyyaml (>=5.3.1)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)", "orjson (>=3.2.1)", "email_validator (>=2.0.0)", "uvicorn[standard] (>=0.12.0)", "pydantic-settings (>=2.0.0)", "pydantic-extra-types (>=2.0.0)"]

[[package]]
name = "fastapi-cli"
version = "0.0.13"
description = "Run and manage FastAPI apps from the command line with FastAPI CLI. ðŸš€"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
rich-toolkit = ">=0.14.8"
typer = ">=0.15.1"
uvicorn = {version = ">=0.15.0", extras = ["standard"]}

[package.extras]
standard = ["uvicorn[standard] (>=0.15.0)", "fastapi-cloud-cli (>=0.1.1)"]
standard-no-fastapi-cloud-cli = ["uvicorn[standard] (>=0.15.0)"]

[[package]]
name = "filelock"
version = "3.19.1"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "fsspec"
version = "2025.9.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dev = ["pre-commit", "ruff (>=0.5)"]
doc = ["numpydoc", "sphinx", "sphinx-design", "sphinx-rtd-theme", "yarl"]
dropbox = ["dropbox", "dropboxdrivefs", "requests"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
test = ["aiohttp (!=4.0.0a0,!=4.0.0a1)", "numpy", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "requests"]
test-downstream = ["aiobotocore (>=2.5.4,<3.0.0)", "dask", "moto[server] (>4,<5)", "pytest-timeout", "xarray"]
test-full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "cloudpickle", "dask", "distributed", "dropbox", "dropboxdrivefs", "fastparquet", "fusepy", "gcsfs", "jinja2", "kerchunk", "libarchive-c", "lz4", "notebook", "numpy", "ocifs", "pandas", "panel", "paramiko", "pyarrow", "pyarrow (>=1)", "pyftpdlib", "pygit2", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "python-snappy", "requests", "smbprotocol", "tqdm", "urllib3", "zarr", "zstandard"]
tqdm = ["tqdm"]

[[package]]
name = "google-api-core"
version = "2.25.1"
description = "Google API client core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-auth = ">=2.14.1,<3.0.0"
googleapis-common-protos = ">=1.56.2,<2.0.0"
proto-plus = [
    {version = ">=1.22.3,<2.0.0", markers = "python_version < \"3.13\""},
    {version = ">=1.25.0,<2.0.0", markers = "python_version >= \"3.13\""},
]
protobuf = ">=3.19.5,<3.20.0 || >3.20.0,<3.20.1 || >3.20.1,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"
requests = ">=2.18.0,<3.0.0"

[package.extras]
async-rest = ["google-auth[aiohttp] (>=2.35.0,<3.0.0)"]
grpc = ["grpcio (>=1.33.2,<2.0.0)", "grpcio (>=1.49.1,<2.0.0)", "grpcio-status (>=1.33.2,<2.0.0)", "grpcio-status (>=1.49.1,<2.0.0)"]
grpcgcp = ["grpcio-gcp (>=0.2.2,<1.0.0)"]
grpcio-gcp = ["grpcio-gcp (>=0.2.2,<1.0.0)"]

[[package]]
name = "google-api-python-client"
version = "2.183.0"
description = "Google API Client Library for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0"
google-auth = ">=1.32.0,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
google-auth-httplib2 = ">=0.2.0,<1.0.0"
httplib2 = ">=0.19.0,<1.0.0"
uritemplate = ">=3.0.1,<5"

[[package]]
name = "google-auth"
version = "2.40.3"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = ">=3.1.4,<5"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0)", "requests (>=2.20.0,<3.0.0)"]
enterprise-cert = ["cryptography", "pyopenssl"]
pyjwt = ["pyjwt (>=2.0)", "cryptography (>=38.0.3)", "cryptography (<39.0.0)"]
pyopenssl = ["pyopenssl (>=20.0.0)", "cryptography (>=38.0.3)", "cryptography (<39.0.0)"]
reauth = ["pyu2f (>=0.1.5)"]
requests = ["requests (>=2.20.0,<3.0.0)"]
testing = ["grpcio", "flask", "freezegun", "mock", "oauth2client", "pyjwt (>=2.0)", "cryptography (>=38.0.3)", "pytest", "pytest-cov", "pytest-localserver", "pyopenssl (>=20.0.0)", "pyu2f (>=0.1.5)", "responses", "urllib3", "packaging", "aiohttp (>=3.6.2,<4.0.0)", "requests (>=2.20.0,<3.0.0)", "aioresponses", "pytest-asyncio", "pyopenssl (<24.3.0)", "aiohttp (<3.10.0)", "cryptography (<39.0.0)"]
urllib3 = ["urllib3", "packaging"]

[[package]]
name = "google-auth-httplib2"
version = "0.2.0"
description = "Google Authentication Library: httplib2 transport"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
google-auth = "*"
httplib2 = ">=0.19.0"

[[package]]
name = "googleapis-common-protos"
version = "1.70.0"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.20.2,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
grpc = ["grpcio (>=1.44.0,<2.0.0)"]

[[package]]
name = "greenlet"
version = "3.2.4"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
docs = ["sphinx", "furo"]
test = ["objgraph", "psutil", "setuptools"]

[[package]]
name = "grpcio"
version = "1.75.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = ">=4.12,<5.0"

[package.extras]
protobuf = ["grpcio-tools (>=1.75.0)"]

[[package]]
name = "grpcio-tools"
version = "1.75.0"
description = "Protobuf code generator for gRPC"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
grpcio = ">=1.75.0"
protobuf = ">=6.31.1,<7.0.0"

[[package]]
name = "h11"
version = "0.16.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "h2"
version = "4.3.0"
description = "Pure-Python HTTP/2 protocol implementation"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
hpack = ">=4.1,<5"
hyperframe = ">=6.1,<7"

[[package]]
name = "hf-xet"
version = "1.1.10"
description = "Fast transfer of large files with the Hugging Face Hub."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
tests = ["pytest"]

[[package]]
name = "hpack"
version = "4.1.0"
description = "Pure-Python HPACK header encoding"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "httpcore"
version = "1.0.9"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = "*"
h11 = ">=0.16"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httplib2"
version = "0.31.0"
description = "A comprehensive HTTP client library."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=3.0.4,<4"

[[package]]
name = "httptools"
version = "0.6.4"
description = "A collection of framework independent HTTP protocol utils."
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.extras]
test = ["Cython (>=0.29.24)"]

[[package]]
name = "httpx"
version = "0.27.2"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = "*"
certifi = "*"
h2 = {version = ">=3,<5", optional = true, markers = "extra == \"http2\""}
httpcore = ">=1.0.0,<2.0.0"
idna = "*"
sniffio = "*"

[package.extras]
brotli = ["brotli", "brotlicffi"]
cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "huggingface-hub"
version = "0.35.1"
description = "Client library to download and publish models, datasets and other repos on the huggingface.co hub"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
filelock = "*"
fsspec = ">=2023.5.0"
hf-xet = {version = ">=1.1.3,<2.0.0", markers = "platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"arm64\" or platform_machine == \"aarch64\""}
packaging = ">=20.9"
pyyaml = ">=5.1"
requests = "*"
tqdm = ">=4.42.1"
typing-extensions = ">=3.7.4.3"

[package.extras]
all = ["InquirerPy (==0.3.4)", "aiohttp", "authlib (>=1.3.2)", "fastapi", "httpx", "itsdangerous", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures (<16.0)", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio (>=4.0.0)", "numpy", "ruff (>=0.9.0)", "libcst (>=1.4.0)", "ty", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3", "mypy (>=1.14.1,<1.15.0)", "mypy (==1.15.0)"]
cli = ["InquirerPy (==0.3.4)"]
dev = ["InquirerPy (==0.3.4)", "aiohttp", "authlib (>=1.3.2)", "fastapi", "httpx", "itsdangerous", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures (<16.0)", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio (>=4.0.0)", "numpy", "ruff (>=0.9.0)", "libcst (>=1.4.0)", "ty", "typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3", "mypy (>=1.14.1,<1.15.0)", "mypy (==1.15.0)"]
fastai = ["toml", "fastai (>=2.4)", "fastcore (>=1.3.27)"]
hf-transfer = ["hf-transfer (>=0.1.4)"]
hf-xet = ["hf-xet (>=1.1.2,<2.0.0)"]
inference = ["aiohttp"]
mcp = ["mcp (>=1.8.0)", "typer", "aiohttp"]
oauth = ["authlib (>=1.3.2)", "fastapi", "httpx", "itsdangerous"]
quality = ["ruff (>=0.9.0)", "libcst (>=1.4.0)", "ty", "mypy (>=1.14.1,<1.15.0)", "mypy (==1.15.0)"]
tensorflow = ["tensorflow", "pydot", "graphviz"]
tensorflow-testing = ["tensorflow", "keras (<3.0)"]
testing = ["InquirerPy (==0.3.4)", "aiohttp", "authlib (>=1.3.2)", "fastapi", "httpx", "itsdangerous", "jedi", "jinja2", "pytest (>=8.1.1,<8.2.2)", "pytest-cov", "pytest-env", "pytest-xdist", "pytest-vcr", "pytest-asyncio", "pytest-rerunfailures (<16.0)", "pytest-mock", "urllib3 (<2.0)", "soundfile", "pillow", "gradio (>=4.0.0)", "numpy"]
torch = ["torch", "safetensors"]
typing = ["typing-extensions (>=4.8.0)", "types-pyyaml", "types-requests", "types-simplejson", "types-toml", "types-tqdm", "types-urllib3"]

[[package]]
name = "hyperframe"
version = "6.1.0"
description = "Pure-Python HTTP/2 framing"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["ruff (>=0.6.2)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "flake8 (>=7.1.1)"]

[[package]]
name = "iniconfig"
version = "2.1.0"
description = "brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "jinja2"
version = "3.1.6"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "joblib"
version = "1.5.2"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "markdown-it-py"
version = "4.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=3.0,<4.0)", "panflute (>=2.3,<3.0)", "markdown-it-pyrs"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins (>=0.5.0)"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins (>=0.5.0)", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme (>=1.0,<2.0)", "jupyter-sphinx", "ipykernel"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions", "requests"]

[[package]]
name = "markupsafe"
version = "3.0.2"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mpmath"
version = "1.3.0"
description = "Python library for arbitrary-precision floating-point arithmetic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
develop = ["pytest (>=4.6)", "pycodestyle", "pytest-cov", "codecov", "wheel"]
docs = ["sphinx"]
gmpy = ["gmpy2 (>=2.1.0a4)"]
tests = ["pytest (>=4.6)"]

[[package]]
name = "networkx"
version = "3.5"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.11"

[package.extras]
default = ["numpy (>=1.25)", "scipy (>=1.11.2)", "matplotlib (>=3.8)", "pandas (>=2.0)"]
developer = ["pre-commit (>=4.1)", "mypy (>=1.15)"]
doc = ["sphinx (>=8.0)", "pydata-sphinx-theme (>=0.16)", "sphinx-gallery (>=0.18)", "numpydoc (>=1.8.0)", "pillow (>=10)", "texext (>=0.6.7)", "myst-nb (>=1.1)", "intersphinx-registry"]
example = ["osmnx (>=2.0.0)", "momepy (>=0.7.2)", "contextily (>=1.6)", "seaborn (>=0.13)", "cairocffi (>=1.7)", "igraph (>=0.11)", "scikit-learn (>=1.5)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.14)", "pydot (>=3.0.1)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)", "pytest-xdist (>=3.0)"]
test-extras = ["pytest-mpl", "pytest-randomly"]

[[package]]
name = "numpy"
version = "2.3.3"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.11"

[[package]]
name = "nvidia-cublas-cu12"
version = "12.6.4.1"
description = "CUBLAS native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-cupti-cu12"
version = "12.6.80"
description = "CUDA profiling tools runtime libs."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-nvrtc-cu12"
version = "12.6.77"
description = "NVRTC native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cuda-runtime-cu12"
version = "12.6.77"
description = "CUDA Runtime native Libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cudnn-cu12"
version = "9.5.1.17"
description = "cuDNN runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"

[[package]]
name = "nvidia-cufft-cu12"
version = "11.3.0.4"
description = "CUFFT native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-cufile-cu12"
version = "1.11.1.6"
description = "cuFile GPUDirect libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-curand-cu12"
version = "10.3.7.77"
description = "CURAND native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-cusolver-cu12"
version = "11.7.1.2"
description = "CUDA solver native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-cublas-cu12 = "*"
nvidia-cusparse-cu12 = "*"
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-cusparse-cu12"
version = "12.5.4.2"
description = "CUSPARSE native runtime libraries"
category = "main"
optional = false
python-versions = ">=3"

[package.dependencies]
nvidia-nvjitlink-cu12 = "*"

[[package]]
name = "nvidia-cusparselt-cu12"
version = "0.6.3"
description = "NVIDIA cuSPARSELt"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "nvidia-nccl-cu12"
version = "2.26.2"
description = "NVIDIA Collective Communication Library (NCCL) Runtime"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvjitlink-cu12"
version = "12.6.85"
description = "Nvidia JIT LTO Library"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "nvidia-nvtx-cu12"
version = "12.6.77"
description = "NVIDIA Tools Extension"
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "packaging"
version = "25.0"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pillow"
version = "11.3.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=8.2)", "sphinx-autobuild", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
test-arrow = ["pyarrow"]
tests = ["check-manifest", "coverage (>=7.4.2)", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout", "pytest-xdist", "trove-classifiers (>=2024.10.12)"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "playwright"
version = "1.55.0"
description = "A high-level API to automate web browsers"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
greenlet = ">=3.1.1,<4.0.0"
pyee = ">=13,<14"

[[package]]
name = "pluggy"
version = "1.6.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.9"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark", "coverage"]

[[package]]
name = "portalocker"
version = "3.2.0"
description = "Wraps the portalocker recipe for easy usage"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
pywin32 = {version = ">=226", markers = "platform_system == \"Windows\""}

[package.extras]
docs = ["portalocker"]
tests = ["coverage-conditional-plugin (>=0.9.0)", "portalocker", "pytest-cov (>=2.8.1)", "pytest-mypy (>=0.8.0)", "pytest-rerunfailures (>=15.0)", "pytest-timeout (>=2.1.0)", "pytest (>=5.4.1)", "sphinx (>=6.0.0)", "types-pywin32 (>=310.0.0.20250429)", "types-redis"]
redis = ["redis"]

[[package]]
name = "prometheus-client"
version = "0.23.1"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prometheus-fastapi-instrumentator"
version = "6.1.0"
description = "Instrument your FastAPI with Prometheus metrics."
category = "main"
optional = false
python-versions = ">=3.7.0,<4.0.0"

[package.dependencies]
fastapi = ">=0.38.1,<1.0.0"
prometheus-client = ">=0.8.0,<1.0.0"

[[package]]
name = "proto-plus"
version = "1.26.1"
description = "Beautiful, Pythonic protocol buffers"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19.0,<7.0.0"

[package.extras]
testing = ["google-api-core (>=1.31.5)"]

[[package]]
name = "protobuf"
version = "6.32.1"
description = ""
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "psycopg2-binary"
version = "2.9.10"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyasn1"
version = "0.6.1"
description = "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyasn1-modules"
version = "0.4.2"
description = "A collection of ASN.1-based protocols modules"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pyasn1 = ">=0.6.1,<0.7.0"

[[package]]
name = "pydantic"
version = "2.11.9"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.33.2"
typing-extensions = ">=4.12.2"
typing-inspection = ">=0.4.0"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata"]

[[package]]
name = "pydantic-core"
version = "2.33.2"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pydantic-settings"
version = "2.11.0"
description = "Settings management using Pydantic"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
pydantic = ">=2.7.0"
python-dotenv = ">=0.21.0"
typing-inspection = ">=0.4.0"

[package.extras]
aws-secrets-manager = ["boto3-stubs", "boto3 (>=1.35.0)"]
azure-key-vault = ["azure-identity (>=1.16.0)", "azure-keyvault-secrets (>=4.8.0)"]
gcp-secret-manager = ["google-cloud-secret-manager (>=2.23.1)"]
toml = ["tomli (>=2.0.1)"]
yaml = ["pyyaml (>=6.0.1)"]

[[package]]
name = "pyee"
version = "13.0.0"
description = "A rough port of Node.js's EventEmitter to Python with a few tricks of its own"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = "*"

[package.extras]
dev = ["build", "flake8", "flake8-black", "pytest", "pytest-asyncio", "pytest-trio", "black", "isort", "jupyter-console", "mkdocs", "mkdocs-include-markdown-plugin", "mkdocstrings", "mypy", "sphinx", "toml", "tox", "trio", "trio", "trio-typing", "twine", "twisted", "validate-pyproject"]

[[package]]
name = "pygments"
version = "2.19.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pyparsing"
version = "3.2.5"
description = "pyparsing - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pytest"
version = "8.4.2"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.9"

[package.dependencies]
colorama = {version = ">=0.4", markers = "sys_platform == \"win32\""}
iniconfig = ">=1"
packaging = ">=20"
pluggy = ">=1.5,<2"
pygments = ">=2.7.2"

[package.extras]
dev = ["argcomplete", "attrs (>=19.2)", "hypothesis (>=3.56)", "mock", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-asyncio"
version = "0.23.8"
description = "Pytest support for asyncio"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pytest = ">=7.0.0,<9"

[package.extras]
docs = ["sphinx (>=5.3)", "sphinx-rtd-theme (>=1.0)"]
testing = ["coverage (>=6.2)", "hypothesis (>=5.7.1)"]

[[package]]
name = "pytest-cov"
version = "5.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "pytest-xdist", "virtualenv"]

[[package]]
name = "python-dotenv"
version = "1.1.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "python-multipart"
version = "0.0.20"
description = "A streaming multipart parser for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pywin32"
version = "311"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "qdrant-client"
version = "1.15.1"
description = "Client library for the Qdrant vector search engine"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
grpcio = ">=1.41.0"
httpx = {version = ">=0.20.0", extras = ["http2"]}
numpy = [
    {version = ">=1.21", markers = "python_version >= \"3.10\" and python_version < \"3.12\""},
    {version = ">=1.26", markers = "python_version == \"3.12\""},
    {version = ">=2.1.0", markers = "python_version >= \"3.13\""},
]
portalocker = ">=2.7.0,<4.0"
protobuf = ">=3.20.0"
pydantic = ">=1.10.8,<2.0.0 || >2.2.0"
urllib3 = ">=1.26.14,<3"

[package.extras]
fastembed = ["fastembed (>=0.7,<0.8)"]
fastembed-gpu = ["fastembed-gpu (>=0.7,<0.8)"]

[[package]]
name = "regex"
version = "2025.9.18"
description = "Alternative regular expression module, to replace re."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "requests"
version = "2.32.5"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
certifi = ">=2017.4.17"
charset_normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "rich"
version = "14.1.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rich-toolkit"
version = "0.15.1"
description = "Rich toolkit for building command-line applications"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=8.1.7"
rich = ">=13.7.1"
typing-extensions = ">=4.12.2"

[[package]]
name = "rsa"
version = "4.9.1"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = "<4,>=3.6"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "ruff"
version = "0.4.10"
description = "An extremely fast Python linter and code formatter, written in Rust."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "safetensors"
version = "0.6.2"
description = ""
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
numpy = ["numpy (>=1.21.6)"]
torch = ["safetensors", "torch (>=1.10)"]
tensorflow = ["safetensors", "tensorflow (>=2.11.0)"]
pinned-tf = ["safetensors", "tensorflow (==2.18.0)"]
jax = ["safetensors", "flax (>=0.6.3)", "jax (>=0.3.25)", "jaxlib (>=0.3.25)"]
mlx = ["mlx (>=0.0.9)"]
paddlepaddle = ["safetensors", "paddlepaddle (>=2.4.1)"]
quality = ["ruff"]
testing = ["safetensors", "h5py (>=3.7.0)", "huggingface-hub (>=0.12.1)", "setuptools-rust (>=1.5.2)", "pytest (>=7.2.0)", "pytest-benchmark (>=4.0.0)", "hypothesis (>=6.70.2)"]
testingfree = ["safetensors", "huggingface-hub (>=0.12.1)", "setuptools-rust (>=1.5.2)", "pytest (>=7.2.0)", "pytest-benchmark (>=4.0.0)", "hypothesis (>=6.70.2)"]
all = ["safetensors", "safetensors", "safetensors", "safetensors", "safetensors", "safetensors", "safetensors"]
dev = ["safetensors"]

[[package]]
name = "scikit-learn"
version = "1.7.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
joblib = ">=1.2.0"
numpy = ">=1.22.0"
scipy = ">=1.8.0"
threadpoolctl = ">=3.1.0"

[package.extras]
build = ["numpy (>=1.22.0)", "scipy (>=1.8.0)", "cython (>=3.0.10)", "meson-python (>=0.17.1)"]
install = ["numpy (>=1.22.0)", "scipy (>=1.8.0)", "joblib (>=1.2.0)", "threadpoolctl (>=3.1.0)"]
benchmark = ["matplotlib (>=3.5.0)", "pandas (>=1.4.0)", "memory_profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.5.0)", "scikit-image (>=0.19.0)", "pandas (>=1.4.0)", "seaborn (>=0.9.0)", "memory_profiler (>=0.57.0)", "sphinx (>=7.3.7)", "sphinx-copybutton (>=0.5.2)", "sphinx-gallery (>=0.17.1)", "numpydoc (>=1.2.0)", "Pillow (>=8.4.0)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.4.0)", "sphinxext-opengraph (>=0.9.1)", "plotly (>=5.14.0)", "polars (>=0.20.30)", "sphinx-design (>=0.5.0)", "sphinx-design (>=0.6.0)", "sphinxcontrib-sass (>=0.3.4)", "pydata-sphinx-theme (>=0.15.3)", "sphinx-remove-toctrees (>=1.0.0.post1)", "towncrier (>=24.8.0)"]
examples = ["matplotlib (>=3.5.0)", "scikit-image (>=0.19.0)", "pandas (>=1.4.0)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.14.0)"]
tests = ["matplotlib (>=3.5.0)", "scikit-image (>=0.19.0)", "pandas (>=1.4.0)", "pytest (>=7.1.2)", "pytest-cov (>=2.9.0)", "ruff (>=0.11.7)", "mypy (>=1.15)", "pyamg (>=4.2.1)", "polars (>=0.20.30)", "pyarrow (>=12.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]
maintenance = ["conda-lock (==3.0.1)"]

[[package]]
name = "scipy"
version = "1.16.2"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.11"

[package.dependencies]
numpy = ">=1.25.2,<2.6"

[package.extras]
test = ["pytest (>=8.0.0)", "pytest-cov", "pytest-timeout", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack", "pooch", "hypothesis (>=6.30)", "array-api-strict (>=2.3.1)", "cython", "meson", "ninja"]
doc = ["sphinx (>=5.0.0,<8.2.0)", "intersphinx-registry", "pydata-sphinx-theme (>=0.15.2)", "sphinx-copybutton", "sphinx-design (>=0.4.0)", "matplotlib (>=3.5)", "numpydoc", "jupytext", "myst-nb (>=1.2.0)", "pooch", "jupyterlite-sphinx (>=0.19.1)", "jupyterlite-pyodide-kernel", "linkify-it-py"]
dev = ["mypy (==1.10.0)", "typing-extensions", "types-psutil", "pycodestyle", "ruff (>=0.0.292)", "cython-lint (>=0.12.2)", "rich-click", "doit (>=0.36.0)", "pydevtool"]

[[package]]
name = "sentence-transformers"
version = "3.4.1"
description = "State-of-the-Art Text Embeddings"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
huggingface-hub = ">=0.20.0"
Pillow = "*"
scikit-learn = "*"
scipy = "*"
torch = ">=1.11.0"
tqdm = "*"
transformers = ">=4.41.0,<5.0.0"

[package.extras]
train = ["datasets", "accelerate (>=0.20.3)"]
onnx = ["optimum[onnxruntime] (>=1.23.1)"]
onnx-gpu = ["optimum[onnxruntime-gpu] (>=1.23.1)"]
openvino = ["optimum-intel[openvino] (>=1.20.0)"]
dev = ["datasets", "accelerate (>=0.20.3)", "pre-commit", "pytest", "pytest-cov", "peft"]

[[package]]
name = "sentiric-contracts-py"
version = "1.8.11"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"
develop = false

[package.dependencies]
google-api-python-client = "*"
grpcio = ">=1.64.1"
protobuf = ">=6.32.0,<7.0.0"

[package.source]
type = "git"
url = "https://github.com/sentiric/sentiric-contracts.git"
reference = "v1.8.11"
resolved_reference = "f13a70333b89da317b49e2f910b33247ed953859"

[[package]]
name = "shellingham"
version = "1.5.4"
description = "Tool to Detect Surrounding Shell"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "soupsieve"
version = "2.8"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "starlette"
version = "0.37.2"
description = "The little ASGI library that shines."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.4.0,<5"

[package.extras]
full = ["httpx (>=0.22.0)", "itsdangerous", "jinja2", "python-multipart (>=0.0.7)", "pyyaml"]

[[package]]
name = "structlog"
version = "24.4.0"
description = "Structured Logging for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["freezegun (>=0.2.8)", "mypy (>=1.4)", "pretend", "pytest-asyncio (>=0.17)", "pytest (>=6.0)", "rich", "simplejson", "twisted"]
docs = ["cogapp", "furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-mermaid", "sphinxext-opengraph", "twisted"]
tests = ["freezegun (>=0.2.8)", "pretend", "pytest-asyncio (>=0.17)", "pytest (>=6.0)", "simplejson"]
typing = ["mypy (>=1.4)", "rich", "twisted"]

[[package]]
name = "sympy"
version = "1.14.0"
description = "Computer algebra system (CAS) in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
mpmath = ">=1.1.0,<1.4"

[package.extras]
dev = ["pytest (>=7.1.0)", "hypothesis (>=6.70.0)"]

[[package]]
name = "threadpoolctl"
version = "3.6.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "tokenizers"
version = "0.22.1"
description = ""
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
huggingface-hub = ">=0.16.4,<2.0"

[package.extras]
testing = ["pytest", "pytest-asyncio", "requests", "numpy", "datasets", "black (==22.3)", "ruff"]
docs = ["sphinx", "sphinx-rtd-theme", "setuptools-rust"]
dev = ["tokenizers"]

[[package]]
name = "torch"
version = "2.7.1"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.9.0"

[package.dependencies]
filelock = "*"
fsspec = "*"
jinja2 = "*"
networkx = "*"
nvidia-cublas-cu12 = {version = "12.6.4.1", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-cupti-cu12 = {version = "12.6.80", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-nvrtc-cu12 = {version = "12.6.77", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cuda-runtime-cu12 = {version = "12.6.77", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cudnn-cu12 = {version = "9.5.1.17", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cufft-cu12 = {version = "11.3.0.4", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cufile-cu12 = {version = "1.11.1.6", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-curand-cu12 = {version = "10.3.7.77", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusolver-cu12 = {version = "11.7.1.2", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusparse-cu12 = {version = "12.5.4.2", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-cusparselt-cu12 = {version = "0.6.3", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nccl-cu12 = {version = "2.26.2", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nvjitlink-cu12 = {version = "12.6.85", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
nvidia-nvtx-cu12 = {version = "12.6.77", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
sympy = ">=1.13.3"
triton = {version = "3.3.1", markers = "platform_system == \"Linux\" and platform_machine == \"x86_64\""}
typing-extensions = ">=4.10.0"

[package.extras]
optree = ["optree (>=0.13.0)"]
opt-einsum = ["opt-einsum (>=3.3)"]

[[package]]
name = "tqdm"
version = "4.67.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-asyncio (>=0.24)", "nbval"]
discord = ["requests"]
slack = ["slack-sdk"]
telegram = ["requests"]
notebook = ["ipywidgets (>=6)"]

[[package]]
name = "transformers"
version = "4.56.2"
description = "State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow"
category = "main"
optional = false
python-versions = ">=3.9.0"

[package.dependencies]
filelock = "*"
huggingface-hub = ">=0.34.0,<1.0"
numpy = ">=1.17"
packaging = ">=20.0"
pyyaml = ">=5.1"
regex = "!=2019.12.17"
requests = "*"
safetensors = ">=0.4.3"
tokenizers = ">=0.22.0,<=0.23.0"
tqdm = ">=4.27"

[package.extras]
accelerate = ["accelerate (>=0.26.0)"]
all = ["tensorflow (>2.9,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1,<0.14.0)", "torch (>=2.2)", "accelerate (>=0.26.0)", "jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "scipy (<1.13.0)", "sentencepiece (>=0.1.91,!=0.1.92)", "protobuf", "tokenizers (>=0.22.0,<=0.23.0)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "kernels (>=0.6.1,<=0.9)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm (!=1.0.18,<=1.0.19)", "torchvision", "codecarbon (>=2.8.1)", "av", "num2words", "mistral-common[opencv] (>=1.6.3)", "jinja2 (>=3.1.0)"]
audio = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
benchmark = ["optimum-benchmark (>=0.3.0)"]
chat-template = ["jinja2 (>=3.1.0)"]
codecarbon = ["codecarbon (>=2.8.1)"]
deepspeed = ["deepspeed (>=0.9.3)", "accelerate (>=0.26.0)"]
deepspeed-testing = ["deepspeed (>=0.9.3)", "accelerate (>=0.26.0)", "pytest (>=7.2.0)", "pytest-asyncio", "pytest-rich", "pytest-xdist", "pytest-order", "pytest-rerunfailures", "timeout-decorator", "parameterized (>=0.9)", "psutil", "datasets (>=2.15.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.11.2)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk (<=3.8.1)", "GitPython (<3.1.19)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic (>=2)", "sentencepiece (>=0.1.91,!=0.1.92)", "sacrebleu (>=1.4.12,<2.0.0)", "libcst", "faiss-cpu", "cookiecutter (==1.7.3)", "mistral-common[opencv] (>=1.6.3)", "optuna", "protobuf"]
dev = ["tensorflow (>2.9,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1,<0.14.0)", "torch (>=2.2)", "accelerate (>=0.26.0)", "jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "scipy (<1.13.0)", "sentencepiece (>=0.1.91,!=0.1.92)", "protobuf", "tokenizers (>=0.22.0,<=0.23.0)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "kernels (>=0.6.1,<=0.9)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm (!=1.0.18,<=1.0.19)", "torchvision", "codecarbon (>=2.8.1)", "av", "num2words", "mistral-common[opencv] (>=1.6.3)", "jinja2 (>=3.1.0)", "pytest (>=7.2.0)", "pytest-asyncio", "pytest-rich", "pytest-xdist", "pytest-order", "pytest-rerunfailures", "timeout-decorator", "parameterized (>=0.9)", "psutil", "datasets (>=2.15.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.11.2)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk (<=3.8.1)", "GitPython (<3.1.19)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic (>=2)", "sacrebleu (>=1.4.12,<2.0.0)", "libcst", "faiss-cpu", "cookiecutter (==1.7.3)", "urllib3 (<2.0.0)", "rich", "pandas (<2.3.0)", "fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)", "scikit-learn"]
dev-tensorflow = ["pytest (>=7.2.0)", "pytest-asyncio", "pytest-rich", "pytest-xdist", "pytest-order", "pytest-rerunfailures", "timeout-decorator", "parameterized (>=0.9)", "psutil", "datasets (>=2.15.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.11.2)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk (<=3.8.1)", "GitPython (<3.1.19)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic (>=2)", "sentencepiece (>=0.1.91,!=0.1.92)", "sacrebleu (>=1.4.12,<2.0.0)", "libcst", "faiss-cpu", "cookiecutter (==1.7.3)", "mistral-common[opencv] (>=1.6.3)", "tensorflow (>2.9,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1,<0.14.0)", "protobuf", "tokenizers (>=0.22.0,<=0.23.0)", "Pillow (>=10.0.1,<=15.0)", "urllib3 (<2.0.0)", "rich", "pandas (<2.3.0)", "scikit-learn", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
dev-torch = ["pytest (>=7.2.0)", "pytest-asyncio", "pytest-rich", "pytest-xdist", "pytest-order", "pytest-rerunfailures", "timeout-decorator", "parameterized (>=0.9)", "psutil", "datasets (>=2.15.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.11.2)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk (<=3.8.1)", "GitPython (<3.1.19)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic (>=2)", "sentencepiece (>=0.1.91,!=0.1.92)", "sacrebleu (>=1.4.12,<2.0.0)", "libcst", "faiss-cpu", "cookiecutter (==1.7.3)", "mistral-common[opencv] (>=1.6.3)", "torch (>=2.2)", "accelerate (>=0.26.0)", "protobuf", "tokenizers (>=0.22.0,<=0.23.0)", "torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm", "Pillow (>=10.0.1,<=15.0)", "kernels (>=0.6.1,<=0.9)", "optuna", "ray[tune] (>=2.7.0)", "sigopt", "timm (!=1.0.18,<=1.0.19)", "torchvision", "codecarbon (>=2.8.1)", "urllib3 (<2.0.0)", "rich", "pandas (<2.3.0)", "fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)", "scikit-learn", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)", "num2words"]
flax = ["jax (>=0.4.1,<=0.4.13)", "jaxlib (>=0.4.1,<=0.4.13)", "flax (>=0.4.1,<=0.7.0)", "optax (>=0.0.8,<=0.1.4)", "scipy (<1.13.0)"]
flax-speech = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
ftfy = ["ftfy"]
hf-xet = ["hf-xet"]
hub-kernels = ["kernels (>=0.6.1,<=0.9)"]
integrations = ["kernels (>=0.6.1,<=0.9)", "optuna", "ray[tune] (>=2.7.0)", "sigopt"]
ja = ["fugashi (>=1.0)", "ipadic (>=1.0.0,<2.0)", "unidic-lite (>=1.0.7)", "unidic (>=1.0.2)", "sudachipy (>=0.6.6)", "sudachidict-core (>=20220729)", "rhoknp (>=1.1.0,<1.3.1)"]
mistral-common = ["mistral-common[opencv] (>=1.6.3)"]
modelcreation = ["cookiecutter (==1.7.3)"]
natten = ["natten (>=0.14.6,<0.15.0)"]
num2words = ["num2words"]
onnx = ["onnxconverter-common", "tf2onnx", "onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)"]
onnxruntime = ["onnxruntime (>=1.4.0)", "onnxruntime-tools (>=1.4.2)"]
open-telemetry = ["opentelemetry-api", "opentelemetry-exporter-otlp", "opentelemetry-sdk"]
optuna = ["optuna"]
quality = ["datasets (>=2.15.0)", "ruff (==0.11.2)", "GitPython (<3.1.19)", "urllib3 (<2.0.0)", "libcst", "rich", "pandas (<2.3.0)"]
ray = ["ray[tune] (>=2.7.0)"]
retrieval = ["faiss-cpu", "datasets (>=2.15.0)"]
ruff = ["ruff (==0.11.2)"]
sagemaker = ["sagemaker (>=2.31.0)"]
sentencepiece = ["sentencepiece (>=0.1.91,!=0.1.92)", "protobuf"]
serving = ["openai (>=1.98.0)", "pydantic (>=2)", "uvicorn", "fastapi", "starlette", "torch (>=2.2)", "accelerate (>=0.26.0)"]
sigopt = ["sigopt"]
sklearn = ["scikit-learn"]
speech = ["torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
testing = ["pytest (>=7.2.0)", "pytest-asyncio", "pytest-rich", "pytest-xdist", "pytest-order", "pytest-rerunfailures", "timeout-decorator", "parameterized (>=0.9)", "psutil", "datasets (>=2.15.0)", "dill (<0.3.5)", "evaluate (>=0.2.0)", "pytest-timeout", "ruff (==0.11.2)", "rouge-score (!=0.0.7,!=0.0.8,!=0.1,!=0.1.1)", "nltk (<=3.8.1)", "GitPython (<3.1.19)", "sacremoses", "rjieba", "beautifulsoup4", "tensorboard", "pydantic (>=2)", "sentencepiece (>=0.1.91,!=0.1.92)", "sacrebleu (>=1.4.12,<2.0.0)", "libcst", "faiss-cpu", "cookiecutter (==1.7.3)", "mistral-common[opencv] (>=1.6.3)"]
tf = ["tensorflow (>2.9,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1,<0.14.0)"]
tf-cpu = ["keras (>2.9,<2.16)", "tensorflow-cpu (>2.9,<2.16)", "onnxconverter-common", "tf2onnx", "tensorflow-text (<2.16)", "keras-nlp (>=0.3.1,<0.14.0)", "tensorflow-probability (<0.24)"]
tf-speech = ["librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
tiktoken = ["tiktoken", "blobfile"]
timm = ["timm (!=1.0.18,<=1.0.19)"]
tokenizers = ["tokenizers (>=0.22.0,<=0.23.0)"]
torch = ["torch (>=2.2)", "accelerate (>=0.26.0)"]
torch-speech = ["torchaudio", "librosa", "pyctcdecode (>=0.4.0)", "phonemizer", "kenlm"]
torch-vision = ["torchvision", "Pillow (>=10.0.1,<=15.0)"]
torchhub = ["filelock", "huggingface-hub (>=0.34.0,<1.0)", "importlib-metadata", "numpy (>=1.17)", "packaging (>=20.0)", "protobuf", "regex (!=2019.12.17)", "requests", "sentencepiece (>=0.1.91,!=0.1.92)", "torch (>=2.2)", "tokenizers (>=0.22.0,<=0.23.0)", "tqdm (>=4.27)"]
video = ["av"]
vision = ["Pillow (>=10.0.1,<=15.0)"]

[[package]]
name = "triton"
version = "3.3.1"
description = "A language and compiler for custom Deep Learning operations"
category = "main"
optional = false
python-versions = "*"

[package.extras]
build = ["cmake (>=3.20)", "lit"]
tests = ["autopep8", "isort", "numpy", "pytest", "pytest-forked", "pytest-xdist", "scipy (>=1.7.1)", "llnl-hatchet"]
tutorials = ["matplotlib", "pandas", "tabulate"]

[[package]]
name = "typer"
version = "0.19.2"
description = "Typer, build great CLIs. Easy to code. Based on Python type hints."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=8.0.0"
rich = ">=10.11.0"
shellingham = ">=1.3.0"
typing-extensions = ">=3.7.4.3"

[[package]]
name = "typing-extensions"
version = "4.15.0"
description = "Backported and Experimental Type Hints for Python 3.9+"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "typing-inspection"
version = "0.4.1"
description = "Runtime typing introspection tools"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = ">=4.12.0"

[[package]]
name = "uritemplate"
version = "4.2.0"
description = "Implementation of RFC 6570 URI Templates"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "urllib3"
version = "2.5.0"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "uvicorn"
version = "0.29.0"
description = "The lightning-fast ASGI server."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0"
colorama = {version = ">=0.4", optional = true, markers = "sys_platform == \"win32\" and extra == \"standard\""}
h11 = ">=0.8"
httptools = {version = ">=0.5.0", optional = true, markers = "extra == \"standard\""}
python-dotenv = {version = ">=0.13", optional = true, markers = "extra == \"standard\""}
pyyaml = {version = ">=5.1", optional = true, markers = "extra == \"standard\""}
uvloop = {version = ">=0.14.0,<0.15.0 || >0.15.0,<0.15.1 || >0.15.1", optional = true, markers = "sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\" and extra == \"standard\""}
watchfiles = {version = ">=0.13", optional = true, markers = "extra == \"standard\""}
websockets = {version = ">=10.4", optional = true, markers = "extra == \"standard\""}

[package.extras]
standard = ["colorama (>=0.4)", "httptools (>=0.5.0)", "python-dotenv (>=0.13)", "pyyaml (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "watchfiles (>=0.13)", "websockets (>=10.4)"]

[[package]]
name = "uvloop"
version = "0.21.0"
description = "Fast implementation of asyncio event loop on top of libuv"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.extras]
dev = ["setuptools (>=60)", "Cython (>=3.0,<4.0)"]
docs = ["Sphinx (>=4.1.2,<4.2.0)", "sphinxcontrib-asyncio (>=0.3.0,<0.4.0)", "sphinx-rtd-theme (>=0.5.2,<0.6.0)"]
test = ["aiohttp (>=3.10.5)", "flake8 (>=5.0,<6.0)", "psutil", "pycodestyle (>=2.9.0,<2.10.0)", "pyOpenSSL (>=23.0.0,<23.1.0)", "mypy (>=0.800)"]

[[package]]
name = "watchfiles"
version = "1.1.0"
description = "Simple, modern and high performance file watching and code reload in python."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
anyio = ">=3.0.0"

[[package]]
name = "websockets"
version = "15.0.1"
description = "An implementation of the WebSocket Protocol (RFC 6455 & 7692)"
category = "main"
optional = false
python-versions = ">=3.9"

[metadata]
lock-version = "1.1"
python-versions = "^3.11"
content-hash = "86292e2b60ee669e9298e8af21ae8e83bf2d7628229d9556d950617661c53b79"

[metadata.files]
annotated-types = []
anyio = []
beautifulsoup4 = []
cachetools = []
certifi = []
charset-normalizer = []
click = []
colorama = []
coverage = []
dnspython = []
email-validator = []
fastapi = []
fastapi-cli = []
filelock = []
fsspec = []
google-api-core = []
google-api-python-client = []
google-auth = []
google-auth-httplib2 = []
googleapis-common-protos = []
greenlet = []
grpcio = []
grpcio-tools = []
h11 = []
h2 = []
hf-xet = []
hpack = []
httpcore = []
httplib2 = []
httptools = []
httpx = []
huggingface-hub = []
hyperframe = []
idna = []
iniconfig = []
jinja2 = []
joblib = []
markdown-it-py = []
markupsafe = []
mdurl = []
mpmath = []
networkx = []
numpy = []
nvidia-cublas-cu12 = []
nvidia-cuda-cupti-cu12 = []
nvidia-cuda-nvrtc-cu12 = []
nvidia-cuda-runtime-cu12 = []
nvidia-cudnn-cu12 = []
nvidia-cufft-cu12 = []
nvidia-cufile-cu12 = []
nvidia-curand-cu12 = []
nvidia-cusolver-cu12 = []
nvidia-cusparse-cu12 = []
nvidia-cusparselt-cu12 = []
nvidia-nccl-cu12 = []
nvidia-nvjitlink-cu12 = []
nvidia-nvtx-cu12 = []
packaging = []
pillow = []
playwright = []
pluggy = []
portalocker = []
prometheus-client = []
prometheus-fastapi-instrumentator = []
proto-plus = []
protobuf = []
psycopg2-binary = []
pyasn1 = []
pyasn1-modules = []
pydantic = []
pydantic-core = []
pydantic-settings = []
pyee = []
pygments = []
pyparsing = []
pytest = []
pytest-asyncio = []
pytest-cov = []
python-dotenv = []
python-multipart = []
pywin32 = []
pyyaml = []
qdrant-client = []
regex = []
requests = []
rich = []
rich-toolkit = []
rsa = []
ruff = []
safetensors = []
scikit-learn = []
scipy = []
sentence-transformers = []
sentiric-contracts-py = []
shellingham = []
sniffio = []
soupsieve = []
starlette = []
structlog = []
sympy = []
threadpoolctl = []
tokenizers = []
torch = []
tqdm = []
transformers = []
triton = []
typer = []
typing-extensions = []
typing-inspection = []
uritemplate = []
urllib3 = []
uvicorn = []
uvloop = []
watchfiles = []
websockets = []
